// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]

  comments Comment[]

  @@unique([email, name, image])
  @@unique([name, image])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Models
model Post {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  title      String
  slug       String   @unique
  content    String   @db.Text
  image      String?
  view       Int      @default(0)
  nbComments Int      @default(0)

  // USER
  userEmail  String
  userName   String
  userAvatar String
  user       User   @relation(fields: [userEmail, userName, userAvatar], references: [email, name, image])

  // CATEGORY
  catSlug  String
  catName  String
  cat      Category  @relation(fields: [catSlug, catName], references: [slug, title])
  // COMMENTS
  comments Comment[]
}

model Category {
  id    String @id @default(cuid())
  slug  String @unique
  title String
  image String
  posts Post[]

  @@unique([slug, title])
}

model Comment {
  id           String @id @default(cuid())
  content      String
  postId       String
  post         Post   @relation(fields: [postId], references: [id])
  authorName   String
  authorAvatar String
  author       User   @relation(fields: [authorName, authorAvatar], references: [name, image])

  @@unique([postId, authorAvatar, authorName])
  @@index([authorName, authorAvatar])
}
